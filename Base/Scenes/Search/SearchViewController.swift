//  SearchViewController.swift
//  Base
//
//  Created by BaoHoang on 27/01/2023.
//  Copyright (c) baohg. All rights reserved.
//
//  This file was generated by the Educa MVVM-C Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  Template created by baohg - bao15899@gmail.com

import UIKit
import RxSwift
import RxCocoa

class SearchViewController: BaseViewController<SearchViewModel> {
    
    @IBOutlet weak var tabbarHeaderBaseView: TabbarHeaderBaseView!
    @IBOutlet weak var searchTextField: UITextField!
    
    weak var routesDelegate: SearchRoutes?
    
    private let bag = DisposeBag()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.setNavigationBarHidden(true, animated: false)
    }
    
    deinit {
        print("SearchViewController deinit âœ…")
    }
    
    private func setupUI() {
         let tap = UITapGestureRecognizer(target: self, action: #selector(UIInputViewController.dismissKeyboard))
        view.addGestureRecognizer(tap)
        tabbarHeaderBaseView.configView(title: L10n.Search.title)
        searchTextField.placeholder = L10n.Search.placeholder
        searchTextField.delegate = self
    }
    
    @objc func dismissKeyboard() {
        view.endEditing(true)
    }
    
    override func bindViewModel() {
        let input = SearchViewModel.Input(searchString: searchTextField.rx.text.orEmpty.asDriver())
        let output = viewModel.transform(input: input)
    }
}

extension SearchViewController: UITextFieldDelegate {
    
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
           if range.location == 0 && string == " " {
               return false
           }
           return true
     }
    
}
