//  SearchViewController.swift
//  Base
//
//  Created by BaoHoang on 27/01/2023.
//  Copyright (c) baohg. All rights reserved.
//
//  This file was generated by the Educa MVVM-C Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  Template created by baohg - bao15899@gmail.com

import UIKit
import RxSwift
import RxCocoa

class SearchViewController: BaseViewController<SearchViewModel> {
    
    @IBOutlet weak var tabbarHeaderBaseView: TabbarHeaderBaseView!
    @IBOutlet weak var searchTextField: UITextField!
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var wrapperView: UIView!
    @IBOutlet weak var emptyStackView: UIStackView!
    @IBOutlet weak var emptyContentLabel: UILabel!
    @IBOutlet weak var emptyTitleLabel: UILabel!
    
    weak var routesDelegate: SearchRoutes?
    
    private let bag = DisposeBag()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.setNavigationBarHidden(true, animated: false)
    }
    
    deinit {
        print("SearchViewController deinit âœ…")
    }
    
    private func setupUI() {
         let tap = UITapGestureRecognizer(target: self, action: #selector(UIInputViewController.dismissKeyboard))
        tap.cancelsTouchesInView = false
        wrapperView.addGestureRecognizer(tap)
        
        tabbarHeaderBaseView.configView(title: L10n.Search.title)
        searchTextField.placeholder = L10n.Search.placeholder
        searchTextField.delegate = self
        searchTextField.clearButtonMode = .always
        
        tableView.sectionFooterHeight = 0.01
        tableView.sectionHeaderHeight = 0.01
        tableView.separatorStyle = .none
        tableView.showsVerticalScrollIndicator = false
        tableView.delegate = self
        tableView.registerCell(type: ComicSuggestTableViewCell.self)
        
        emptyTitleLabel.text = L10n.Search.Empty.title
        emptyContentLabel.text = L10n.Search.Empty.content
        emptyTitleLabel.font = UIFont.systemFont(ofSize: 18, weight: .bold)
        emptyContentLabel.font = UIFont.systemFont(ofSize: 14, weight: .regular)
    }
    
    @objc func dismissKeyboard() {
        wrapperView.endEditing(true)
    }
    
    override func bindViewModel() {
        let input = SearchViewModel.Input(searchString: searchTextField.rx.text.orEmpty.asDriver(),
                                          didSelectItem: tableView.rx.modelSelected(ComicSuggestModel.self).asDriver())
        let output = viewModel.transform(input: input)
        
        output.comicSuggest
            .drive(tableView.rx.items) { tableView, index, data in
                let cell = tableView.dequeueReusableCell(type: ComicSuggestTableViewCell.self, forIndexPath: IndexPath.init(row: index, section: 0))
                cell.configCell(data: data)
                return cell
            }
            .disposed(by: bag)
        
        output.selectedItem
            .drive { [weak self] data in
                self?.routesDelegate?.navigateToComicDetail(comicDetailUrl: data.detailUrl ?? "",
                                                                        title: data.title ?? "")
            }
            .disposed(by: bag)
        
        output.comicSuggestIsEmpty
            .drive(emptyStackView.rx.isHidden)
            .disposed(by: bag)

    }
}

extension SearchViewController: UITextFieldDelegate {
    
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
           if range.location == 0 && string == " " {
               return false
           }
           return true
     }
    
}

extension SearchViewController: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 130
    }

}
