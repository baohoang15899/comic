//  HomeViewController.swift
//  Base
//
//  Created by BaoHoang on 15/10/2022.
//  Copyright (c) baohg. All rights reserved.
//
//  This file was generated by the Educa MVVM-C Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  Template created by baohg - bao15899@gmail.com

import UIKit
import RxSwift
import RxCocoa
import RxDataSources

class HomeViewController: BaseViewController<HomeViewModel> {

    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var headerView: TabbarHeaderBaseView!
    
    weak var routesDelegate: HomeRoutes?
    
    private let bag = DisposeBag()
    private var dataSource: RxTableViewSectionedReloadDataSource<HomeSectionData>? = nil
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.setNavigationBarHidden(true, animated: false)
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        self.navigationItem.title = " "
    }
    
    deinit {
        print("HomeViewController deinit âœ…")
    }
    
    private func setupUI() {
        tableView.registerHeaderFooterView(type: BaseSectionHeaderFooterView.self)
        tableView.registerCell(type: ComicTableViewCell.self)
        tableView.registerCell(type: BannerTableViewCell.self)
        tableView.sectionFooterHeight = 0.01
        tableView.sectionHeaderHeight = 0.01
        tableView.separatorStyle = .none
        tableView.showsVerticalScrollIndicator = false
        tableView.delegate = self
        headerView.configView(title: L10n.Home.tab)
    }
    
    override func bindViewModel() {
        let input = HomeViewModel.Input(getHotComic: Driver.just(()),
                                        getTopManga: Driver.just(()),
                                        getTopManhwa: Driver.just(()),
                                        getTopDay: Driver.just(()),
                                        getNominate: Driver.just(())
        )
        let output = viewModel.transform(input: input)
        
        dataSource = RxTableViewSectionedReloadDataSource<HomeSectionData>(
            
            configureCell: { datasource, tableView, indexPath, item in
                switch datasource[indexPath.section].type {
        
                case .normal:
                    let cell = tableView.dequeueReusableCell(type: ComicTableViewCell.self, forIndexPath: indexPath)
                    cell.configCell(data: item.data ?? [])
                    cell.didSelectComic = { [weak self] comic in
                        if let url = comic.detailUrl, let title = comic.title {
                            self?.routesDelegate?.navigateToComicDetail(comicDetailUrl: url, title: title)
                        }
                    }
                    return cell
                    
                case .banner:
                    let cell = tableView.dequeueReusableCell(type: BannerTableViewCell.self, forIndexPath: indexPath)
                    cell.configCell(data: item.data ?? [])
                    return cell
                    
                }

            }
        )
        
        if let dataSource = dataSource {
            output.homeSection
                .drive(tableView.rx.items(dataSource: dataSource))
                .disposed(by: bag)
        }
    }
}

extension HomeViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        switch dataSource?[indexPath.section].type {
        case .banner:
            return 250
        default:
            return 200
        }
    }
    
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        let header = self.tableView.dequeueReusableHeaderFooterView(type: BaseSectionHeaderFooterView.self)
        header.configHeader(title: dataSource?[section].header ?? "")
        return header
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 40
    }
    
    
}
